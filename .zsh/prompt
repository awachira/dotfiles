#
# Colorized prompt, with different username colors for different systems.
#

# Color codes
autoload -U colors && colors
# 256 color help
source $ZSH/contrib/spectrum.zsh

# I hate typing
nil=$reset_color

# Hostname styles
FULL='%M'
SHORT='%m'

# System => color/hostname map:
#   UC: username color
#   LC: location/cwd color
#   HD: hostname display
# Defaults:
UC=$fg_bold[green]
LC=$fg_bold[blue]
HD=$FULL

HOST=`hostname | cut -d '.' -f 1`
DOMAIN=`hostname | cut -d '.' -f 2-`

# Manually cut hostname; hostname -s bails out on some systems.
case $HOST in
    ytram | atrus ) UC=$fg_bold[yellow] LC=$fg_bold[green] HD=$SHORT ;;
    bitprophet ) UC=$fg_bold[cyan] ;;
    www* | db* | web* | lb* ) UC=$fg_bold[red] ;;
esac

# Some special cases to the above
if [[ ($HOST == "monitor") && ($DOMAIN == "bitprophet.org") ]]; then
    UC=$fg_bold[cyan] HD=$SHORT
fi


# Prompt function because PROMPT_COMMAND is awesome
function precmd() {
    # If logged in as another user, not gonna have all this firing anyway.
    # So let's just show the host only and be done with it.
    host="${UC}${HD}$nil"

    # Special vim-tab-like shortpath (~/folder/directory/foo => ~/f/d/foo)
    _pwd=`pwd | sed "s#$HOME#~#"`
    if [[ $_pwd == "~" ]]; then
        _dirname=$_pwd
    else
        _dirname=`dirname "$_pwd" | esed "s/\/(.)[^\/]*/\/\1/g"`
        if [[ $_dirname == "/" ]]; then
            _dirname=""
        fi
        _dirname="$_dirname/`basename "$_pwd"`"
    fi
    pwd="${LC}${_dirname}$nil"

    # Virtualenv
    _venv=`basename "$VIRTUAL_ENV"`
    venv="" # need this to clear it when we leave a venv
    if [[ -n $_venv ]]; then
        venv=" $nil{$fg_bold[magenta]${_venv}$nil}"
    fi

    # RVM (steals the venv slot if there's no venv)
    if [[ -s $_rvm && -z $_venv ]]; then
        # Just show Ruby gemset.  I don't use different interpreter lines, nor
        # do I care about patchlevel.
        _venv=`$_rvm_home/bin/rvm-prompt g`
        if [[ "$_venv" != "system" && -n $_venv ]]; then
            venv=" $nil{$fg_bold[magenta]${_venv}$nil}"
        fi
    fi

    # Git branch / dirtiness
    # Dirtiness cribbed from:
    # http://henrik.nyh.se/2008/12/git-dirty-prompt#comment-8325834
    if git update-index -q --refresh 2>/dev/null; git diff-index --quiet --cached HEAD --ignore-submodules -- 2>/dev/null && git diff-files --quiet --ignore-submodules 2>/dev/null
        then dirty=""
    else
        dirty="$fg_bold[red]*$nil"
    fi
    _branch=$(git symbolic-ref HEAD 2>/dev/null)
    _branch=${_branch#refs/heads/} # apparently faster than sed
    branch="" # need this to clear it when we leave a repo
    if [[ -n $_branch ]]; then
        branch=" ${nil}[$fg_bold[magenta]${_branch}${dirty}${nil}]"
    fi

    # Dollar/pound sign
    end="${LC}\$$nil "

    # Time (useful when catting logs)
    time="[$fg_bold[green]$(date +"%R")$nil]"

    # Put it all together
    export PS1="${time} ${host}:${pwd}${venv}${branch} ${end}"
}
